
The output of the SymbolTable is as follows:
"Scope_of_SymbolTable {entry, entry, ...}" with
	* Scope_of_SymbolTable = The scope that is shown at that line (either GLOBAL or some LOCAL scope).
	* entry = A mapping of a symbol to a tuple consisting of the type and the starting address of the symbol in question.
		For example: 'someInt' -> ('int', 0)
	Note: Functions don't have a starting address in memory, so their address is None.

The SymbolTable is saved at the initial construction (when still empty), at every point just before some local tables are deleted, and at the end of the AST walkthrough.


Global - {}


Global - {'main': int func()}
Scope 1 - {'b': int, 'a': int}

